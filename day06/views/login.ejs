<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Document</title>
  <link rel="stylesheet" type="text/css" href="/node_modules/bootstrap/dist/css/bootstrap.min.css" />
  <style>
    #form {
      width: 400px;
      margin: 0 auto;
      margin-top: 100px;
    }

    h1 {
      text-align: center;
    }

    input[type='submit'] {
      width: 100%;
    }
  </style>
</head>

<body>
  <form id="form">
    <h1>登录页面</h1>
    <div class="form-group">
      <input type="text" name="username" id="username" class="form-control input-lg" placeholder="用户名">
    </div>

    <div class="form-group">
      <input type="password" name="password" id="password" class="form-control input-lg" placeholder="密码">
    </div>

    <div class="form-group">
      <a href="/register" class="pull-right">去注册</a>
    </div>

    <div class="form-group">
      <input type="submit" value="登录" class="btn btn-primary btn-lg">
    </div>
  </form>

  <script src="/node_modules/jquery/dist/jquery.min.js"></script>
  
</body>


<script>
    $("#form").on("submit",()=>{
      // 获取登录输入的信息
      var username=$('#username').val()
      var password=$('#password').val()
        // 发送ajax请求，像后端调用接口 
        $.ajax({
          url:"/login",
          type:"post",
          // 判断用户输入的信息是否合法
          beforeSend:()=>{
            if(username.trim()=="" || password.trim()==""){
              alert("请输入用户名")
              return false
            }
          },
          data:{
            // 传入输入信息数据
            username,
            password
          },
          // 请求成功后的回调函数
          success:(res)=>{
            console.log(res)
            if(res.status==506){
              alert(res.msg)
              return
            }else if(res.status==200){
              // 点击发送一次请求   ，跳转渲染发送一次请求 跳转渲染的那次就携带了用户信息cookie
              // 登录成功后后台的服务器端已经将输入的信息存放在了后端的一个地址中 ，然后用set-cookie讲地址的钥匙返回给前端页面
              // 然后登录后的  同一个端口下  每一次请求都会携带这个用户的信息这样就可以判断用户当前是否登陆
              alert(res.msg)
              location.href="/"
            }
          }
        })

      return false
    })
</script>
</html>